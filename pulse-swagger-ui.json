openapi: 3.0.1
info:
  title: Pulse Application API
  description: "PULSE Health Dashboard is a near real time dashboard showing the status\
    \ of all the platforms and its application status along with RED metrics and USE\
    \ metrics with history\r\nPULSE Dashboard also provides ongoing issues along with\
    \ the incidents and its communications in Email\\SMS\r\nDashboard will be sitting\
    \ behind MCC on PCF which will help customers check their application status \r\
    \n"
  contact:
    name: Pulse Dashboard API
    email: pulse_admin@mastercard.com
  version: 1.0.0
servers:
- url: http://localhost:8080
  description: Generated server url
tags:
- name: profile
  description: PROFILE API
- name: platform
  description: PLATFORM API
- name: dropdown
  description: DROPDOWN API
- name: authentication
  description: AUTHENTICATION API
- name: application
  description: APPLICATION API
paths:
  /pulses/applications:
    get:
      tags:
      - application
      summary: Fetch applications information based on platform id
      description: Returns all the applications infomation for the provided platform
      operationId: fetchApplication
      parameters:
      - name: Platform-Id
        in: header
        required: false
        schema:
          type: string
      - name: Application-Id
        in: header
        required: false
        schema:
          type: string
      - name: Admin-Roles
        in: header
        required: true
        schema:
          type: array
          items:
            type: string
      - name: User-Roles
        in: header
        required: true
        schema:
          type: array
          items:
            type: string
      - name: Emp-Id
        in: header
        required: true
        schema:
          type: string
      - name: Is-Pulse-Admin
        in: header
        required: true
        schema:
          type: boolean
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationModel'
    put:
      tags:
      - application
      summary: Subscribe/ Notify for status change for application
      description: Returns success or failure information
      operationId: subscribeApplication
      requestBody:
        description: Application id and employee id required
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/StatusRequest'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PulseResponse'
    post:
      tags:
      - application
      summary: Add/Update application information
      description: Returns success or failure information
      operationId: mergeApplication
      requestBody:
        description: Application information that need to be added or updated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationRequest'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PulseResponse'
    delete:
      tags:
      - application
      summary: Delete application based on application Id
      description: Returns success or failure
      operationId: deleteApplication
      parameters:
      - name: Emp-Id
        in: header
        description: Employee Id
        required: true
        schema:
          type: string
      - name: Application-Id
        in: header
        description: Application Id
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PulseResponse'
  /pulses/auths:
    get:
      tags:
      - authentication
      summary: Get all the pulse roles associated with user
      description: Returns list of pulse roles
      operationId: createParticipant
      parameters:
      - name: User-Roles
        in: header
        required: true
        schema:
          type: array
          items:
            type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthRoleResponse'
  /pulses/dropdowns:
    get:
      tags:
      - dropdown
      summary: Fetch dropdown data based on dependents
      description: Returns dropdown list with id and value
      operationId: createParticipant_1
      parameters:
      - name: Key
        in: header
        required: true
        schema:
          type: string
      - name: Dependent-Key
        in: header
        required: false
        schema:
          type: string
      - name: Admin-Roles
        in: header
        required: false
        schema:
          type: array
          items:
            type: string
      - name: Is-Pulse-Admin
        in: header
        required: false
        schema:
          type: boolean
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DropdownResponse'
  /pulses/platforms:
    get:
      tags:
      - platform
      summary: Fetch platform information based on user role
      description: Returns all the platform infomation for which employee has access
        to
      operationId: fetchPlatform
      parameters:
      - name: Admin-Roles
        in: header
        required: true
        schema:
          type: array
          items:
            type: string
      - name: User-Roles
        in: header
        required: true
        schema:
          type: array
          items:
            type: string
      - name: Is-Pulse-Admin
        in: header
        required: true
        schema:
          type: boolean
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlatformDetailsJson'
    put:
      tags:
      - platform
      summary: Approve/Reject the platform that was requested to onboard
      description: Returns success or failure information
      operationId: approvePlatform
      requestBody:
        description: Information regaring approving/rejecting the change
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlatformApproveRequest'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PulseResponse'
    post:
      tags:
      - platform
      summary: Add/Update platform information
      description: Returns success or failure information
      operationId: mergePlatform
      requestBody:
        description: Platform information that need to be added or updated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlatformModel'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PulseResponse'
    delete:
      tags:
      - platform
      summary: Delete platform based on platform Id
      description: Returns success or failure
      operationId: deletePlatform
      parameters:
      - name: Emp-Id
        in: header
        description: Employee Id
        required: true
        schema:
          type: string
      - name: Platform-Id
        in: header
        description: Platform Id
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PulseResponse'
  /pulses/profiles:
    get:
      tags:
      - profile
      summary: Fetch profile information by employee id
      description: Returns single profile information
      operationId: fetchUser
      parameters:
      - name: Emp-Id
        in: header
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PulseResponse'
    post:
      tags:
      - profile
      summary: Add/Update profile information
      description: Returns success or failure information
      operationId: mergeUser
      requestBody:
        description: Profile information that need to be added or updated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfileRequest'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PulseResponse'
components:
  schemas:
    PulseResponse:
      type: object
      properties:
        errorCode:
          type: string
        errorDescription:
          type: string
        callReferenceNumber:
          type: string
        responseMessage:
          type: string
        responseData:
          type: object
        success:
          type: boolean
    StatusRequest:
      type: object
      properties:
        status:
          type: string
        statusName:
          type: string
        statusType:
          type: string
        applicationId:
          type: string
        empId:
          type: string
        statusChange:
          type: boolean
        onlyStatusType:
          type: boolean
        subscribed:
          type: boolean
    ApplicationModel:
      type: object
      properties:
        platformId:
          type: string
        platformName:
          type: string
        applicationId:
          type: string
        applicationName:
          type: string
        modifiedAt:
          type: string
        displayName:
          type: string
        description:
          type: string
        applicationType:
          type: string
        dynatraceId:
          type: string
        dynatraceHost:
          type: string
        status:
          type: string
        statusType:
          type: string
        healthCheckApi:
          type: string
        apiCertificate:
          type: string
        subscribed:
          type: integer
          format: int32
    ApplicationRequest:
      type: object
      properties:
        applicationId:
          type: string
        description:
          type: string
        applicationType:
          type: string
        dynatraceId:
          type: string
        dynatraceHost:
          type: string
        status:
          type: string
        statusType:
          type: string
        platformId:
          type: string
        empId:
          type: string
        displayName:
          type: string
        healthCheckApi:
          type: string
        apiCertificate:
          type: string
    AuthRoleResponse:
      type: object
      properties:
        adminRoles:
          type: array
          items:
            type: string
        userRoles:
          type: array
          items:
            type: string
    DropdownResponse:
      type: object
      properties:
        id:
          type: string
        value:
          type: string
    PlatformDetails:
      type: object
      properties:
        platformId:
          type: string
        platformName:
          type: string
        modifiedAt:
          type: string
        operational:
          type: integer
          format: int32
        degradation:
          type: integer
          format: int32
        maintenance:
          type: integer
          format: int32
        outage:
          type: integer
          format: int32
        displayName:
          type: string
        description:
          type: string
        programOwner:
          type: string
        technicalOwner:
          type: string
        userAdGroup:
          type: string
        adminAdGroup:
          type: string
        programId:
          type: string
        enterpriseId:
          type: string
        enterpriseName:
          type: string
        programName:
          type: string
        requestedBy:
          type: string
    PlatformDetailsJson:
      type: object
      properties:
        adminPlatforms:
          type: array
          items:
            $ref: '#/components/schemas/PlatformDetails'
        userPlatforms:
          type: array
          items:
            $ref: '#/components/schemas/PlatformDetails'
        pulseAdminPlatforms:
          type: array
          items:
            $ref: '#/components/schemas/PlatformDetails'
        onboardPlatforms:
          type: array
          items:
            $ref: '#/components/schemas/PlatformDetails'
    PlatformModel:
      type: object
      properties:
        platformId:
          type: string
        description:
          type: string
        programOwner:
          type: string
        technicalOwner:
          type: string
        userAdGroup:
          type: string
        adminAdGroup:
          type: string
        programId:
          type: string
        enterpriseId:
          type: string
        empId:
          type: string
        displayName:
          type: string
        onboardRequest:
          type: boolean
    PlatformApproveRequest:
      type: object
      properties:
        platformId:
          type: string
        empId:
          type: string
        requestedBy:
          type: string
        requestStatus:
          type: string
        rejectReason:
          type: string
    ProfileRequest:
      required:
      - empId
      - loginRequest
      type: object
      properties:
        empId:
          pattern: (E|e)[0-9]{6}
          type: string
        name:
          type: string
        emailId:
          type: string
        phoneNumber:
          type: string
        role:
          type: string
        loginRequest:
          type: boolean
